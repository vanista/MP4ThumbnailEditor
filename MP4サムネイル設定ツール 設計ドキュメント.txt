# MP4サムネイル設定ツール 設計ドキュメント

### 1. 概要
ローカルのMP4動画ファイルの特定のフレームを、ファイル内のカバー画像（サムネイル）として設定できるデスクトップアプリケーションをElectronで開発する。

### 2. 技術スタック
- Electron (HTML/CSS/JavaScript)
- Node.js
- FFmpeg
- fluent-ffmpeg (FFmpeg操作用のNode.jsライブラリ)

### 3. アプリの機能要件
- ローカルMP4ファイルの読み込み・表示
- HTML5 videoタグでの動画再生およびシークによるフレーム選択
- 選択したフレームを画像化し、MP4のメタデータにカバー画像として埋め込む
- 元のファイルに直接サムネイルを設定

### 4. UI構成
- 動画ファイル選択用のファイルピッカー
- 動画プレイヤー（HTML5 Video）
- サムネイル設定ボタン
- 処理完了通知（ダイアログまたは通知エリア）

### 5. 処理フロー
1. ユーザーが動画を選択 → HTML5 videoタグで表示
2. ユーザーが再生・シークでサムネイルとするフレームを決定
3. 「サムネイルに設定」ボタンを押下
4. ElectronからNode.js経由でFFmpegを呼び出し、指定フレームを抽出
5. 抽出した画像をMP4メタデータにカバー画像として埋め込み、元のファイルを更新
6. 処理完了後、ユーザーへ通知

### 6. ファイル構成
```
project/
├── main.js (Electronメインプロセス)
├── renderer.js (Electronレンダープロセス)
├── index.html (UI)
├── package.json
└── preload.js
```

### 7. コマンド例（FFmpeg）

- フレーム抽出（一時ファイルとして保存）
```bash
ffmpeg -ss [timestamp] -i input.mp4 -frames:v 1 -q:v 2 temp_thumbnail.jpg
```

- カバー画像埋め込み（元のファイルを上書き）
```bash
ffmpeg -i input.mp4 -i temp_thumbnail.jpg -map 0 -map 1 -c copy -disposition:v:1 attached_pic -y input.mp4
```

### 8. 留意点
- 動画再生時のシーク精度はブラウザ（Electron）依存のため、フレーム単位の厳密な指定は難しいが、通常の用途では問題なし
- 処理中の一時ファイルはシステムの一時フォルダに保存し、処理完了後に自動的に削除

